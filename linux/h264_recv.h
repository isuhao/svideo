#ifndef _H264_RECV_H
#define _H264_RECV_H

#include "my_types.h"


 // 相机数据类型
typedef enum
{
    CAMERA_THROB = 0xFFFF0001
	, CAMERA_THROB_RESPONSE = 0xFFFF0002
	, CAMERA_IMAGE = 0xF0000001
	, CAMERA_VIDEO = 0xF0000002
	, CAMERA_RECORD = 0xF0010001
	, CAMERA_STATE = 0xF0020001
}
CAMERA_INFO_TYPE;

// 相机命令集
typedef enum
{
    CAMERA_UNKNOW_CMD = 0xFFFF0000
    , CAMERA_GET_PARAM_CMD = 0x000F0001
    , CAMERA_SET_PARAM_CMD = 0x000F0002
    , CAMERA_SET_EXPOSURE_CMD = 0x000F0003
    , CAMERA_SET_GAIN_CMD = 0x000F0004
    , CAMERA_SET_AGCLIMIT_CMD = 0x000F0005
    , CAMERA_GET_TIME_CMD = 0x000F0006
    , CAMERA_SET_TIME_CMD = 0x000F0007
    , CAMERA_SET_RGB_GAIN_CMD = 0x000F0008
    , CAMERA_SET_ENCODE_MODE_CMD = 0x000F0009
    , CAMERA_SET_FPS_MODE_CMD = 0x000F0010
    , CAMERA_SOFT_TRIGGER_CAPTURE_CMD = 0x000F0011
    , CAMERA_SET_REG_CMD = 0x000F1000
    , CAMERA_GET_STATE_CMD = 0x000F2001
    , CAMERA_SET_STATE_CMD = 0x000F2002
    , CAMERA_DEBUG_SET_SOME_VALUE_CMD = 0x000F3000
    , CAMERA_XML_EXT_CMD = 0x000F4000
    , CAMERA_RESET_DEVICE_CMD = 0x000F5000
    , CAMERA_GET_RESET_REPORT_CMD = 0x000F5001
    , CAMERA_NETCOM_CMD = 0x000F6000
}
CAMERA_COMMAND_TYPE;

typedef struct tag_head
{
	DWORD32 dwType;
	DWORD32 dwInfoLen;
	DWORD32 dwDataLen;
}
INFO_HEADER;

typedef struct tag_block
{
	DWORD32 dwID;
	DWORD32 dwLen;
}
BLOCK_HEADER;

// 信息ID集
typedef enum
{
    BLOCK_IMAGE_TYPE = 0xFF000001
	, BLOCK_IMAGE_WIDTH = 0xFF000002
	, BLOCK_IMAGE_HEIGHT = 0xFF000003
	, BLOCK_IMAGE_TIME = 0xFF000004
	, BLOCK_IMAGE_EXT_INFO = 0xFF000005
	, BLOCK_IMAGE_JPEG_CR = 0xFF000006
	, BLOCK_IMAGE_Y = 0xFF000007
	, BLOCK_VIDEO_TYPE = 0xFF001001
	, BLOCK_FRAME_TYPE = 0xFF001002
	, BLOCK_VIDEO_TIME = 0xFF001003
	, BLOCK_IMAGE_OFFSET = 0xFF001004
	, BLOCK_VIDEO_EXT_INFO = 0xFF001005
	, BLOCK_VIDEO_Y = 0xFF001006
	, BLOCK_XML_TYPE = 0xFF002001
}
CAMERA_BLOCK_NAME;

int ReceiveVideo(const char* ip,void (*h264_recv_cb)(char *data,int size,void *ud),void *ud);

#endif

